{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tornike\\\\Desktop\\\\exla\\\\src\\\\App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  const initialValues = {\n    firstName: \"\",\n    lastName: \"\",\n    age: \"\"\n  };\n  const {\n    formValue,\n    setFormValue\n  } = usest(initialValues);\n\n  const onChangeInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValue({ ...formValue,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"firstName\",\n      placeholder: \"Enter your Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n/* Შექმენით useForm custom hook(ვორქშოფის დროს რაც განახეთ იმის მსგავსი).\n\nᲰუკს უნდა მუშაობდეს შემდეგნაირად:\nროცა იუზერი ინფუთში რამეს ჩაწერს, ფორმის მნიშვნელობები შეინახოს სტეიტში(კარგი იქნება თუ ნახევარ წამიან დებაუნსს გაუკეთებთ).\nფორმის მნიშვნელობებთან ერთად უნდა დაისეტოს შესაბამისი ერორ მესიჯები (ყველა ფილდს თავისი ვალიდაცია ექნება)\nჰუკი უნდა აბრუნებდეს ფუნქციას რომელიც საბმიტის შემდეგ გაასუფთავებს ფილდებს.\nჰუკი უნდა აბრუნებდეს ცვლადს/ფუნქციას,რომლის მიხედვითაც გადაწყდება შეეძლება თუ არა იუზერს ღილაკზე ხელის დაჭერა და \nდასაბმითება(არ უნდა შეეძლოს თუ რომელიმე required ფილდი არაა შევსებული ან რომელიმე ფილდს ერორი აქვს)\n */\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","App","initialValues","firstName","lastName","age","formValue","setFormValue","usest","onChangeInput","e","name","value","target"],"sources":["C:/Users/tornike/Desktop/exla/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  const initialValues = {firstName:\"\", lastName:\"\", age:\"\"}\n  const {formValue, setFormValue} = usest(initialValues)\n\n  const onChangeInput = (e) => {\n    const {name,value} = e.target;\n    setFormValue({...formValue,[name]:value})\n  }\n\n  return (\n    <div className=\"App\">\n    <label>Name</label> \n    <input type={\"text\"} name=\"firstName\" placeholder='Enter your Name' />\n    </div>\n  );\n}\n\nexport default App;\n\n\n/* Შექმენით useForm custom hook(ვორქშოფის დროს რაც განახეთ იმის მსგავსი).\n\nᲰუკს უნდა მუშაობდეს შემდეგნაირად:\nროცა იუზერი ინფუთში რამეს ჩაწერს, ფორმის მნიშვნელობები შეინახოს სტეიტში(კარგი იქნება თუ ნახევარ წამიან დებაუნსს გაუკეთებთ).\nფორმის მნიშვნელობებთან ერთად უნდა დაისეტოს შესაბამისი ერორ მესიჯები (ყველა ფილდს თავისი ვალიდაცია ექნება)\nჰუკი უნდა აბრუნებდეს ფუნქციას რომელიც საბმიტის შემდეგ გაასუფთავებს ფილდებს.\nჰუკი უნდა აბრუნებდეს ცვლადს/ფუნქციას,რომლის მიხედვითაც გადაწყდება შეეძლება თუ არა იუზერს ღილაკზე ხელის დაჭერა და \nდასაბმითება(არ უნდა შეეძლოს თუ რომელიმე required ფილდი არაა შევსებული ან რომელიმე ფილდს ერორი აქვს)\n */"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;EACb,MAAMC,aAAa,GAAG;IAACC,SAAS,EAAC,EAAX;IAAeC,QAAQ,EAAC,EAAxB;IAA4BC,GAAG,EAAC;EAAhC,CAAtB;EACA,MAAM;IAACC,SAAD;IAAYC;EAAZ,IAA4BC,KAAK,CAACN,aAAD,CAAvC;;EAEA,MAAMO,aAAa,GAAIC,CAAD,IAAO;IAC3B,MAAM;MAACC,IAAD;MAAMC;IAAN,IAAeF,CAAC,CAACG,MAAvB;IACAN,YAAY,CAAC,EAAC,GAAGD,SAAJ;MAAc,CAACK,IAAD,GAAOC;IAArB,CAAD,CAAZ;EACD,CAHD;;EAKA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAEA;MAAO,IAAI,EAAE,MAAb;MAAqB,IAAI,EAAC,WAA1B;MAAsC,WAAW,EAAC;IAAlD;MAAA;MAAA;MAAA;IAAA,QAFA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;KAfQX,G;AAiBT,eAAeA,GAAf;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}